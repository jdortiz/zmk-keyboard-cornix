/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define WIN 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define NAVI   5
#define NUM    6
#define DEBUG  7

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS HOME END LEFT RIGHT>; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_R KEYS_T 41 42 43 44 45 46 6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 45 46 47 48 49 31>;
            hold-trigger-on-release;
            label = "HOME_ROW_MOD_LEFT";
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_L KEYS_T 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 38 39 40 41 42 43 44 45 46>;
            hold-trigger-on-release;
            label = "HOME_ROW_MOD_RIGHT";
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //flavor = "balanced";

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // for quick tapping; shift+~

            hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        bkspc_del: bkspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        config_cond {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <27 28>;
        };

        combo_right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <33 34>;
        };
    };

    macros {
        next_snippet: next_snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp N &kp X>;
            label = "NEXT_SNIPPET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            display-name = "Colemak";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC             &kp Q            &kp W                 &kp F        &kp P                &kp G                                  &kp J      &kp L                &kp U        &kp Y                  &kp SEMI      &bkspc_del
&kp TAB             &hml LCTRL A     &hml LALT R           &hml LGUI S  &hm_shift_l LSHFT T  &kp D                                  &kp H      &hm_shift_r RSHFT N  &hmr RGUI E  &hmr RALT I            &hmr RCTRL O  &kp SQT
&kp BSLH            &kp Z            &kp X                 &kp C        &kp V                &kp B    &kp C_PLAY_PAUSE  &kp C_MUTE  &kp K      &kp M                &kp COMMA    &kp DOT                &kp FSLH      &kp MINUS
&kp LC(LEFT_ARROW)  &kp LS(LC(TAB))  &kp LEFT_PARENTHESIS  &kp GRAVE    &lt 2 LEFT_BRACKET   &kp RET                                &kp SPACE  &lt 3 RIGHT_BRACKET  &kp EQUAL    &kp RIGHT_PARENTHESIS  &kp LC(TAB)   &kp LC(RIGHT_ARROW)
            >;

            sensor-bindings =
                <&inc_dec_kp C_NEXT C_PREV>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC             &kp Q            &kp W                 &kp E        &kp R                &kp T                                  &kp Y      &kp U                &kp I        &kp O                  &kp P            &kp BSLH
&kp TAB             &hml LCTRL A     &hml LALT S           &hml LGUI D  &hm_shift_l LSHFT F  &kp G                                  &kp H      &hm_shift_r RSHFT J  &hmr RGUI K  &hmr RALT L            &hmr RCTRL SEMI  &kp SQT
&kp BSLH            &kp Z            &kp X                 &kp C        &kp V                &kp B    &kp C_PLAY_PAUSE  &kp C_MUTE  &kp N      &kp M                &kp COMMA    &kp DOT                &kp FSLH         &kp MINUS
&kp LC(LEFT_ARROW)  &kp LS(LC(TAB))  &kp LEFT_PARENTHESIS  &kp GRAVE    &lt 2 LEFT_BRACKET   &kp RET                                &kp SPACE  &lt 3 RIGHT_BRACKET  &kp EQUAL    &kp RIGHT_PARENTHESIS  &kp LC(TAB)      &kp LC(RIGHT_ARROW)
            >;

            sensor-bindings =
                <&inc_dec_kp C_NEXT C_PREV>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        numbers_layer {
            display-name = "Numbers";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC     &none                 &none  &none          &none   &none                  &kp N7     &kp N8    &kp N9      &kp KP_MINUS  &kp KP_SLASH           &kp BACKSPACE
&kp TAB     &none                 &none  &none          &none   &none                  &kp N4     &kp N5    &kp N6      &kp KP_PLUS   &kp KP_MULTIPLY        &none
&caps_word  &kp LEFT_PARENTHESIS  &none  &none          &none   &none    &none  &none  &kp N1     &kp N2    &kp N3      &kp KP_EQUAL  &kp RIGHT_PARENTHESIS  &none
&none       &none                 &none  &next_snippet  &trans  &kp RET                &kp SPACE  &lt 3 N0  &kp KP_DOT  &none         &none                  &none
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        navig_layer {
            display-name = "Steer";

            // TODO: Some binds are waiting for shifted keycode support.
            // -------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1              &kp F2              &kp F3                    &kp F4                    &kp F5             &kp F6                                 &kp F7             &kp F8    &kp F9     &kp F10    &kp F11    &kp F12
&kp LC(UP_ARROW)    &kp LC(DOWN_ARROW)  &kp LS(LC(LG(NUMBER_1)))  &kp LS(LC(LG(NUMBER_2)))  &kp LS(LC(LG(C)))  &kp LS(LC(TAB))                        &kp LC(TAB)        &kp HOME  &kp UP     &kp END    &kp PG_UP  &none
&kp LC(LEFT_ARROW)  &kp LS(LC(LG(A)))   &kp LS(LC(LG(R)))         &kp LS(LC(LG(S)))         &kp LS(LC(LG(T)))  &kp LS(LC(LG(D)))  &mkp MB3  &mkp MB2  &kp LS(LC(LG(F)))  &kp LEFT  &kp DOWN   &kp RIGHT  &kp PG_DN  &kp LC(RIGHT_ARROW)
&none               &none               &none                     &none                     &mo 2              &kp RET                                &kp SPACE          &trans    &kp GRAVE  &none      &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        config_layer {
            display-name = "CONFIG";

            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | BTCLR | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                &none  &kp C_BRI_DN       &none             &kp C_BRI_UP     &none         &bootloader
&bt BT_CLR   &none         &none         &none         &none         &none                       &to 1  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &none         &none
&sys_reset   &none         &none         &none         &none         &none         &none  &none  &to 0  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &out OUT_TOG  &sys_reset
&none        &none         &none         &none         &none         &none                       &none  &none              &none             &none            &none         &none
            >;
        };

        Navi_layer {
            display-name = "Navi";
            bindings = <
&none  &none  &none           &mmv MOVE_UP    &kp PAGE_UP      &kp PAGE_DOWN                   &mkp MB1  &mkp MB3  &mkp MB2  &msc SCRL_UP  &msc SCRL_DOWN  &none
&none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT     &none           &none
&none  &none  &none           &none           &none            &msc SCRL_DOWN  &trans  &trans  &trans    &trans    &none     &none         &none           &none
&none  &none  &none           &mo 0           &trans           &trans                          &none     &none     &kp N5    &none         &none           &none
            >;
        };
    };
};
